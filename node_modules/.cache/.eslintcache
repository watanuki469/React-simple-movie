[{"C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\index.js":"1","C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\App.js":"2","C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\reportWebVitals.js":"3","C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\pages\\MoviePage.js":"4","C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\pages\\HomePage.js":"5","C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\pages\\MovieDetailsPage.js":"6","C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\components\\layout\\Main.js":"7","C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\components\\banner\\Banner.js":"8","C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\config.js":"9","C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\components\\movie\\MovieList.js":"10","C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\components\\layout\\Header.js":"11","C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\components\\button\\Button.js":"12","C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\components\\movie\\MovieCard.js":"13","C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\hooks\\useDebounce.js":"14","C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\components\\loading\\LoadingSkeleton.js":"15"},{"size":629,"mtime":1672494826000,"results":"16","hashOfConfig":"17"},{"size":1296,"mtime":1672494826000,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1672494826000,"results":"19","hashOfConfig":"17"},{"size":4968,"mtime":1672494826000,"results":"20","hashOfConfig":"17"},{"size":928,"mtime":1672494826000,"results":"21","hashOfConfig":"17"},{"size":7855,"mtime":1672494826000,"results":"22","hashOfConfig":"17"},{"size":267,"mtime":1672494826000,"results":"23","hashOfConfig":"17"},{"size":2834,"mtime":1672494826000,"results":"24","hashOfConfig":"17"},{"size":814,"mtime":1672494826000,"results":"25","hashOfConfig":"17"},{"size":1875,"mtime":1672494826000,"results":"26","hashOfConfig":"17"},{"size":533,"mtime":1672494826000,"results":"27","hashOfConfig":"17"},{"size":667,"mtime":1672494826000,"results":"28","hashOfConfig":"17"},{"size":3758,"mtime":1672494826000,"results":"29","hashOfConfig":"17"},{"size":448,"mtime":1672494826000,"results":"30","hashOfConfig":"17"},{"size":314,"mtime":1672494826000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kh0wn2",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\index.js",[],[],"C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\App.js",[],[],"C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\reportWebVitals.js",[],[],"C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\pages\\MoviePage.js",["80"],[],"import React, { useEffect, useState } from \"react\";\nimport useSWR from \"swr\";\nimport { fetcher, tmdbAPI } from \"../config\";\nimport MovieCard from \"components/movie/MovieCard\";\nimport useDebounce from \"hooks/useDebounce\";\nimport ReactPaginate from \"react-paginate\";\nimport { MovieCardSkeleton } from \"components/movie/MovieCard\";\nimport Button from \"components/button/Button\";\nimport { v4 } from \"uuid\";\nconst itemsPerPage = 20;\n\nconst MoviePage = () => {\n  const [pageCount, setPageCount] = useState(0);\n  const [itemOffset, setItemOffset] = useState(0);\n  const [nextPage, setNextPage] = useState(1);\n  const [fillter, setFillter] = useState(\"\");\n  const [url, setUrl] = useState(tmdbAPI.getMovieList(\"popular\", nextPage));\n  const fillterDebounce = useDebounce(fillter, 500);\n  const handleFilterChange = (e) => {\n    setFillter(e.target.value);\n  };\n  const { data, error } = useSWR(url, fetcher);\n  const loading = !data && !error;\n  useEffect(() => {\n    if (fillterDebounce) {\n      setUrl(tmdbAPI.getMovieSearch(fillterDebounce, nextPage));\n    } else {\n      setUrl(tmdbAPI.getMovieList(\"popular\", nextPage));\n    }\n  }, [fillterDebounce, nextPage]);\n  const movies = data?.results || [];\n  // const { page, total_pages } = data;\n\n  useEffect(() => {\n    if (!data || !data.total_results) return;\n    setPageCount(Math.ceil(data.total_results / itemsPerPage));\n  }, [data, itemOffset]);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = (event) => {\n    const newOffset = (event.selected * itemsPerPage) % data.total_results;\n    setItemOffset(newOffset);\n    setNextPage(event.selected + 1);\n  };\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"flex mb-10\">\n        <div className=\"flex-1\">\n          <input\n            type=\"text\"\n            className=\"w-full p-4 bg-slate-800 text-white outline-none\"\n            placeholder=\"Type here to search...\"\n            onChange={handleFilterChange}\n          />\n        </div>\n        <button className=\"p-4 bg-primary text-white\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            strokeWidth=\"1.5\"\n            stroke=\"currentColor\"\n            className=\"w-6 h-6\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z\"\n            />\n          </svg>\n        </button>\n      </div>\n      {/* {loading && (\n        <div className=\"w-10 h-10 rounded-full border-4 border-primary border-t-transparent border-t-4 mx-auto animate-spin\"></div>\n      )} */}\n      {loading && (\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 md:gap-10\">\n          {new Array(itemsPerPage).fill(0).map(() => (\n            <MovieCardSkeleton key={v4()}></MovieCardSkeleton>\n          ))}\n        </div>\n      )}\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-10 md:grid-cols-2\">\n        {!loading &&\n          movies.length > 0 &&\n          movies.map((item) => (\n            <MovieCard key={item.id} item={item}></MovieCard>\n          ))}\n      </div>\n\n      <div className=\"mt-10\">\n        <ReactPaginate\n          breakLabel=\"...\"\n          nextLabel=\">\"\n          onPageChange={handlePageClick}\n          pageRangeDisplayed={5}\n          pageCount={pageCount}\n          previousLabel=\"<\"\n          renderOnZeroPageCount={null}\n          className=\"pagination\"\n        />\n      </div>\n      <div className=\"flex items-center justify-center mt-10 gap-x-5 hidden\">\n        <span className=\"cursor-pointer\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            strokeWidth=\"1.5\"\n            stroke=\"currentColor\"\n            className=\"w-6 h-6\"\n            onClick={() => setNextPage(nextPage - 1)}\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M15.75 19.5L8.25 12l7.5-7.5\"\n            />\n          </svg>\n        </span>\n        {new Array(pageCount).fill(0).map((item, index) => (\n          <span\n            className=\"cursor-pointer  inline-block py-2 px-4 rounded leading-none bg-white text-slate-900\"\n            onClick={() => setNextPage(index + 1)}\n          >\n            {index + 1}\n          </span>\n        ))}\n\n        <span className=\"cursor-pointer\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            strokeWidth=\"1.5\"\n            stroke=\"currentColor\"\n            className=\"w-6 h-6\"\n            onClick={() => setNextPage(nextPage + 1)}\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M8.25 4.5l7.5 7.5-7.5 7.5\"\n            />\n          </svg>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default MoviePage;\n","C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\pages\\HomePage.js",[],[],"C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\pages\\MovieDetailsPage.js",["81","82","83"],[],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport useSWR from \"swr\";\nimport MovieCard from \"components/movie/MovieCard\";\nimport { fetcher, tmdbAPI } from \"../config\";\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const { data } = useSWR(tmdbAPI.getMovieDetails(movieId), fetcher);\n  if (!data) return null;\n  const { backdrop_path, poster_path, title, genres, overview } = data;\n  return (\n    <div className=\"\">\n      <div className=\"w-full h-[400px] lg:h-[600px] relative\">\n        <div className=\"absolute inset-0 bg-black bg-opacity-70\"></div>\n        <div\n          className=\"w-full h-full bg-cover bg-no-repeat\"\n          style={{\n            backgroundImage: `url(${tmdbAPI.imageOriginal(backdrop_path)})`,\n          }}\n        ></div>\n      </div>\n      <div className=\"w-full max-w-[300px] lg:h-[400px] md:max-w-[500px] lg:max-w-[800px] mx-auto -mt-[200px] relative z-10 pb-10\">\n        <img\n          className=\"w-full h-full object-cover rounded-xl\"\n          src={tmdbAPI.imageOriginal(poster_path)}\n          alt=\"\"\n        />\n      </div>\n      <h1 className=\"text-center text-4xl font-bold text-white mb-10\">\n        {title}\n      </h1>\n      {genres.length > 0 && (\n        <div className=\"grid grid-cols-2 gap-6 md:flex items-center justify-center gap-x-5 mb-10\">\n          {genres.map((item) => (\n            <span\n              className=\"py-2 text-center md:py-2 md:px-4 border rounded border-primary text-primary\"\n              key={item.id}\n            >\n              {item.name}\n            </span>\n          ))}\n        </div>\n      )}\n      <p className=\"text-center text-sm leading-relaxed max-w-[600px] mx-auto mb-10\">\n        {overview}\n      </p>\n      <MovieMeta type=\"credits\"></MovieMeta>\n      <MovieMeta type=\"videos\"></MovieMeta>\n      <MovieMeta type=\"similar\"></MovieMeta>\n      {/* \n      <MovieCredits></MovieCredits>\n      <MovieVideos></MovieVideos>\n      <MovieSimilar></MovieSimilar> */}\n    </div>\n  );\n};\n\nfunction MovieMeta({ type = \"videos\" }) {\n  const { movieId } = useParams();\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, type), fetcher);\n  if (!data) return null;\n  if (type === \"credits\") {\n    const { cast } = data;\n    if (!cast || cast.length <= 0) return null;\n\n    return (\n      <div className=\"py-10\">\n        <h2 className=\"text-center text-3xl mb-10\">Casts</h2>\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-5\">\n          {cast.slice(0, 4).map((item) => (\n            <div className=\"cast-item\" key={item.id}>\n              <img\n                src={tmdbAPI.imageOriginal(item.profile_path)}\n                className=\"w-full h-[350px] object-cover rounded-lg mb-3\"\n                alt=\"\"\n              />\n              <h3 className=\"text-xl font-medium\">{item.name}</h3>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  } else {\n    const { results } = data;\n    if (!results || results.length <= 0) return null;\n    if (type === \"videos\")\n      return (\n        <div className=\"py-10\">\n          <div className=\"flex flex-col gap-10\">\n            {results.slice(0, 2).map((item) => (\n              <div className=\"\" key={item.id}>\n                <h3 className=\"mb-5 text-xl font-medium p-3 bg-secondary inline-block\">\n                  {item.name}\n                </h3>\n                <div key={item.id} className=\"w-full aspect-video\">\n                  <iframe\n                    width=\"864\"\n                    height=\"486\"\n                    src={`https://www.youtube.com/embed/${item.key}`}\n                    title=\"YouTube video player\"\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                    className=\"w-full h-full object-fill\"\n                  ></iframe>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      );\n    if (type === \"similar\")\n      return (\n        <div className=\"py-10\">\n          <h2 className=\"text-3xl font-medium mb-10\">Similar movies</h2>\n          <div className=\"movie-list\">\n            <Swiper\n              grabCursor={\"true\"}\n              spaceBetween={40}\n              slidesPerView={\"auto\"}\n            >\n              {results.length > 0 &&\n                results.map((item) => (\n                  <SwiperSlide key={item.id}>\n                    <MovieCard item={item}></MovieCard>\n                  </SwiperSlide>\n                ))}\n            </Swiper>\n          </div>\n        </div>\n      );\n  }\n  return null;\n}\n\nfunction MovieCredits() {\n  const { movieId } = useParams();\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"credits\"), fetcher);\n  if (!data) return null;\n  const { cast } = data;\n  if (!cast || cast.length < 0) return null;\n  return (\n    <div className=\"py-10\">\n      <h2 className=\"text-center text-3xl mb-10\">Casts</h2>\n      <div className=\"grid grid-cols-4 gap-5\">\n        {cast.slice(0, 4).map((item) => (\n          <div className=\"cast-item\" key={item.id}>\n            <img\n              src={tmdbAPI.imageOriginal(item.profile_path)}\n              alt=\"\"\n              className=\"w-full h-[350px] object-cover rounded-lg mb-3\"\n            />\n            <h3 className=\"text-xl font-medium\">{item.name}</h3>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction MovieVideos() {\n  const { movieId } = useParams();\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"videos\"), fetcher);\n  if (!data) return null;\n  const { results } = data;\n  if (!results || results.length < 0) return null;\n  return (\n    <div className=\"py-10\">\n      <div className=\"flex flex-col gap-10\">\n        {results.slice(0, 2).map((item) => (\n          <div key={item.id}>\n            <h3 className=\"mb-5 text-xl font-medium text-white p-3 bg-secondary inline-block\">\n              {item.name}\n            </h3>\n            <div className=\"w-full aspect-video\">\n              <iframe\n                width=\"892\"\n                height=\"502\"\n                src={`https://www.youtube.com/embed/${item.key}`}\n                title=\"(GTA V 2022) Tham gia cuộc đua phối hợp cùng đồng đội Ben Ngố và cái kết đầu tiên về đích.\"\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n                className=\"w-full h-full object-fill\"\n              ></iframe>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction MovieSimilar() {\n  const { movieId } = useParams();\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"similar\"), fetcher);\n  if (!data) return null;\n  const { results } = data;\n  if (!results || results.length < 0) return null;\n  return (\n    <div className=\"py-10\">\n      <h2 className=\"text-3xl font-medium mb-10\">Similar movie</h2>\n      <div className=\"movie-list\">\n        <Swiper grabCursor={true} spaceBetween={40} slidesPerView={\"auto\"}>\n          {results.length > 0 &&\n            results.map((item) => (\n              <SwiperSlide key={item.id}>\n                <MovieCard item={item}></MovieCard>\n              </SwiperSlide>\n            ))}\n        </Swiper>\n      </div>\n    </div>\n  );\n}\n\n// <iframe width=\"892\" height=\"502\" src=\"https://www.youtube.com/embed/U1K4pY7GFxM\" title=\"(GTA V 2022) Tham gia cuộc đua phối hợp cùng đồng đội Ben Ngố và cái kết đầu tiên về đích.\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\nexport default MovieDetailsPage;\n","C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\components\\layout\\Main.js",[],[],"C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\components\\banner\\Banner.js",["84","85"],[],"import React, { useEffect, useState } from \"react\";\nimport useSWR from \"swr\";\nimport { fetcher } from \"../../config\";\nimport { SwiperSlide, Swiper } from \"swiper/react\";\nimport Button from \"../button/Button\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Banner = () => {\n  const { data } = useSWR(\n    `https://api.themoviedb.org/3/movie/upcoming?api_key=7ee8fc348294f723162b9f5c8ee92c2a`,\n    fetcher\n  );\n  const movies = data?.results || [];\n  return (\n    <section className=\"banner h-[500px] page-container mb-20 overflow-hidden\">\n      <Swiper grabCursor=\"true\" slidesPerView={\"auto\"}>\n        {movies.length > 0 &&\n          movies.map((item) => (\n            <SwiperSlide key={item.id}>\n              <BannerItem item={item}></BannerItem>\n            </SwiperSlide>\n          ))}\n      </Swiper>\n    </section>\n  );\n};\n\nfunction BannerItem({ item }) {\n  const { title, poster_path, id } = item;\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"w-full h-full rounded-lg relative\">\n      <div className=\"overlay absolute inset-0 bg-gradient-to-t from-[rgba(0,0,0,0.5)] to-[rgba(0,0,0,0.5)] rounded-lg\"></div>\n      <img\n        src={`https://image.tmdb.org/t/p/original/${poster_path}`}\n        alt=\"\"\n        className=\"w-full h-full object-cover rounded-lg\"\n      />\n      <div className=\"absolute left-5 bottom-5 w-full text-white\">\n        <h2 className=\"font-bold text-3xl mb-5\">{title}</h2>\n        <div className=\"flex items-center gap-x-3 mb-8\">\n          <span className=\"px-4 py-2 border border-white rounded-md\">\n            Adventure\n          </span>\n          <span className=\"px-4 py-2 border border-white rounded-md\">\n            Action\n          </span>\n          <span className=\"px-4 py-2 border border-white rounded-md\">\n            Drama\n          </span>\n        </div>\n        {/* <Button onClick={() => navigate(`/movie/${id}`)}>Watch Now</Button> */}\n\n        <Button onClick={() => navigate(`/movie/${id}`)} className=\"flex items-center justify-center\">\n          Watch\n          <span className=\"pl-1\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke-width=\"1.5\"\n              stroke=\"currentColor\"\n              class=\"w-6 h-6\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                d=\"M15.91 11.672a.375.375 0 010 .656l-5.603 3.113a.375.375 0 01-.557-.328V8.887c0-.286.307-.466.557-.327l5.603 3.112z\"\n              />\n            </svg>\n          </span>\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Banner;\n","C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\config.js",[],[],"C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\components\\movie\\MovieList.js",[],[],"C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\components\\layout\\Header.js",[],[],"C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\components\\button\\Button.js",[],[],"C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\components\\movie\\MovieCard.js",[],[],"C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\hooks\\useDebounce.js",[],[],"C:\\Users\\ThanhCong\\Downloads\\react-simple-movies\\react-simple-movies\\src\\components\\loading\\LoadingSkeleton.js",[],[],{"ruleId":"86","severity":1,"message":"87","line":8,"column":8,"nodeType":"88","messageId":"89","endLine":8,"endColumn":14},{"ruleId":"86","severity":1,"message":"90","line":140,"column":10,"nodeType":"88","messageId":"89","endLine":140,"endColumn":22},{"ruleId":"86","severity":1,"message":"91","line":165,"column":10,"nodeType":"88","messageId":"89","endLine":165,"endColumn":21},{"ruleId":"86","severity":1,"message":"92","line":198,"column":10,"nodeType":"88","messageId":"89","endLine":198,"endColumn":22},{"ruleId":"86","severity":1,"message":"93","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"94","line":1,"column":28,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'MovieCredits' is defined but never used.","'MovieVideos' is defined but never used.","'MovieSimilar' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used."]